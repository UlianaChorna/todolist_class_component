{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/intent/todo_list/src/App.js\";\nimport React from 'react';\nimport './styles/index.css';\nimport TodoForm from './components/TodoForm';\nimport TodoList from './components/TodoList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.fetchData = async () => {\n      try {\n        const response = await fetch('https://jsonplaceholder.typicode.com/todos');\n        const jsonData = await response.json();\n        // Slice the data array to get only the first 10 todos\n        const firstTenTodos = jsonData.slice(0, 10);\n        this.setState({\n          todoItems: firstTenTodos\n        });\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    this.addItem = todoItem => {\n      this.setState(prevState => ({\n        todos: [...prevState.todoItems, todoItem]\n      }));\n      // const newTodoItems = [\n      //   ...this.state.todoItems,\n      //   {\n      //     index: this.state.todoItems.length + 1,\n      //     title: todoItem.newItemValue,\n      //     done: false,\n      //   }\n      // ];\n      // this.setState({ todoItems: newTodoItems });\n    };\n    this.removeItem = itemIndex => {\n      const updatedTodoItems = this.state.todoItems.filter(todo => todo.id !== itemIndex);\n      this.setState({\n        todoItems: updatedTodoItems\n      });\n    };\n    this.state = {\n      todoItems: []\n    };\n  }\n  componentDidMount() {\n    this.fetchData();\n  }\n  TodoCompleted(itemIndex) {\n    // Avoid directly mutating state, use setState instead\n    const completedItems = this.state.todoItems.map((todo, index) => {\n      if (index === itemIndex) {\n        return {\n          ...todo,\n          completed: !todo.completed\n        };\n      }\n      return todo;\n    });\n    this.setState({\n      todoItems: completedItems\n    });\n  }\n  render() {\n    const {\n      todoItems\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"nav__item\",\n        children: \"Todo App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n        onAdd: this.addItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n        todoItems: todoItems,\n        onDelete: this.removeItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","TodoForm","TodoList","jsxDEV","_jsxDEV","App","Component","constructor","props","fetchData","response","fetch","jsonData","json","firstTenTodos","slice","setState","todoItems","error","console","addItem","todoItem","prevState","todos","removeItem","itemIndex","updatedTodoItems","state","filter","todo","id","componentDidMount","TodoCompleted","completedItems","map","index","completed","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onAdd","onDelete"],"sources":["/Users/admin/Desktop/intent/todo_list/src/App.js"],"sourcesContent":["import React from 'react';\nimport './styles/index.css';\nimport TodoForm from './components/TodoForm';\nimport TodoList from './components/TodoList';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state ={\n      todoItems: []\n    }\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  fetchData = async () => {\n    try {\n      const response = await fetch('https://jsonplaceholder.typicode.com/todos');\n      const jsonData = await response.json();\n      // Slice the data array to get only the first 10 todos\n      const firstTenTodos = jsonData.slice(0, 10);\n      this.setState({ todoItems: firstTenTodos });\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  addItem=(todoItem) =>{\n    this.setState((prevState) => ({\n      todos: [...prevState.todoItems, todoItem]\n    }));\n    // const newTodoItems = [\n    //   ...this.state.todoItems,\n    //   {\n    //     index: this.state.todoItems.length + 1,\n    //     title: todoItem.newItemValue,\n    //     done: false,\n    //   }\n    // ];\n    // this.setState({ todoItems: newTodoItems });\n  }\n\n  removeItem= (itemIndex)=> {\n    const updatedTodoItems = this.state.todoItems.filter(\n      (todo) => todo.id !== itemIndex\n    );\n    this.setState({ todoItems: updatedTodoItems });\n  }\n\n  TodoCompleted(itemIndex) {\n    // Avoid directly mutating state, use setState instead\n    const completedItems = this.state.todoItems.map((todo, index) => {\n      if (index === itemIndex) {\n        return {\n          ...todo,\n          completed: !todo.completed\n        };\n      }\n      return todo;\n    });\n    this.setState({ todoItems: completedItems });\n  }\n\n\n render() {\n  const { todoItems} = this.state;\n  return (\n    <div className=\"wrapper\">\n      <h1 className='nav__item'>Todo App</h1>\n      <TodoForm onAdd={this.addItem} /> \n      <TodoList todoItems={todoItems} onDelete={this.removeItem}/> \n    </div>\n  );\n } \n \n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}